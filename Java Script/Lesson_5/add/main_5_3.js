// - Дано натуральное число n. Выведите все числа от 1 до n.
// - Даны два целых числа A и В . Выведите все числа от A до B включительно, в порядке возрастания, если A < B, или в порядке убывания в противном случае.
//
//
// -   функція Приймає масив та число "i", та міняє місцями об`єкт який знаходиться в індексі "i" на "i+1"
//   EXAMPLE:
//   foo([9,8,0,4], 0) // ==> [ 8, 9, 0, 4 ]
//   foo([9,8,0,4], 1) // ==> [ 9 ,0, 8, 4 ]
//   foo([9,8,0,4], 2) // ==> [ 9, 8, 4, 0 ]
//
// - Сворити функцію яка буде переносити елементи з значенням 0 у кінець маисву. Зберігаючи при цьому порядок не нульових значень.
// Двожина масиву від 2 до 100
// EXAMPLE:
// [1,0,6,0,3] => [1,6,3,0,0]
// [0,1,2,3,4] => [1,2,3,4,0]
// [0,0,1,0]   => [1,0,0,0]

// - Дано натуральное число n. Выведите все числа от 1 до n.
// let zebra = (arg_n) => {
//     for (let i = 0; i < arg_n; i++) {
//         console.log(i);
//     }
// };
// zebra(10);

// - Даны два целых числа A и В . Выведите все числа от A до B включительно, в порядке возрастания, если A < B, или в порядке убывания в противном случае.
// let banana = (A, B) => {
//     if (A < B) {
//         for (let i = A; i <= B; i++) {
//             console.log(i);
//         }
//     } else if (A > B) {
//         for (let i = A; i >= B; i--) {
//             console.log(i);
//         }
//
//     }
// };
// banana(80, 40);

//-   функція Приймає масив та число "i", та міняє місцями об`єкт який знаходиться в індексі "i" на "i+1"
//   EXAMPLE:
//   foo([9,8,0,4], 0) // ==> [ 8, 9, 0, 4 ]
//   foo([9,8,0,4], 1) // ==> [ 9 ,0, 8, 4 ]
//   foo([9,8,0,4], 2) // ==> [ 9, 8, 4, 0 ]
//
// let camel = (arr, index) => {
//     let nw = arr[index + 1];
//     arr[index + 1] = arr[index];
//     arr[index] = nw;
//     console.log(arr);
// };
// camel([9, 8, 0, 4], 2);

//- Сворити функцію яка буде переносити елементи з значенням 0 у кінець маисву. Зберігаючи при цьому порядок не нульових значень.
// Двожина масиву від 2 до 100
// EXAMPLE:
// [1,0,6,0,3] => [1,6,3,0,0]
// [0,1,2,3,4] => [1,2,3,4,0]
// [0,0,1,0]   => [1,0,0,0]
let camel = (arr) => {
//debugger;
    let q=0;
    for (let i = 0; i < arr.length-q; i++) {
        if (arr[i] === 0 ) {
            for (let j = i; j < arr.length - 1; j++) {
                arr[j] = arr[j + 1];

            }
            arr[arr.length - 1] = 0;
            q++;
            i--;
        }
console.log(arr);
    }

};
camel([6, 0, 0, 0, 6, 5, 0, 1]);



